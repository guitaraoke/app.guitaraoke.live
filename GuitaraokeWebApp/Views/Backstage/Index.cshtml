@model SongQueue;
@{
	ViewData["Title"] = "Backstage";
}
<div id="dashboard">
	<div id="song-queue">
		<ol id="ol-song-queue">
			@foreach (var item in Model.QueuedSongs) {
				<li draggable="true" class="dropzone" id="li-@item.Song.Slug"
					data-song-slug="@item.Song.Slug">
					@item.Song.Name
					<a href="#" class="mark-song-as-played-link">PLAYED</a>
					<ul>
						@foreach (var player in item.Players) {
							<li>
								@player.Key.Name
								<text> (@String.Join(", ", player.Value))</text>
							</li>
						}
					</ul>
				</li>

			}
		</ol>
	</div>
	<div id="starred-songs">
		<ol>
			@foreach (var pair in Model.StarredSongs
					.OrderByDescending(pair => pair.Value)) {
				<li>
					@pair.Key.Name
					@pair.Value
				</li>

			}
		</ol>
	</div>
</div>
<script>
	document.getElementById('ol-song-queue').addEventListener("click",
		async ({ target }) => {
			if (target.tagName === "A" && target.className === "mark-song-as-played-link") {
				var li = target.closest("li");
				var slug = li.getAttribute("data-song-slug");
				await fetch(`/backstage/status/${slug}`, {
					method: 'POST',
					headers: { 'Content-Type': 'application/json' },
					body: JSON.stringify(true)
				});
				li.remove();
			}
		});
	let dragged;
	let id;
	let index;

	HTMLCollection.prototype.indexOf = Array.prototype.indexOf;

	document.addEventListener("dragstart", ({ target }) => {
		dragged = target;
		id = target.id;
		index = target.parentNode.children.indexOf(target);
	});

	document.addEventListener("dragenter", ({ target }) => {
		if (target.classList.contains("dropzone")) target.classList.add("drop-target");
		event.preventDefault();
	});

	document.addEventListener("dragleave", ({ target }) => {
		if (target.classList.contains("dropzone")) target.classList.remove("drop-target");
		event.preventDefault();
	});

	document.addEventListener("dragover", _ => event.preventDefault());

	document.addEventListener("drop", async ({ target }) => {
		if (target.classList.contains("dropzone") && target.id !== id) {
			target.classList.remove("drop-target");
			dragged.remove(dragged);
			const indexDrop = target.parentNode.children.indexOf(target);
			if (index > indexDrop) {
				target.before(dragged);
			} else {
				target.after(dragged);
			}
			const data = {
				song: dragged.getAttribute("data-song-slug"),
				position: indexDrop
			};
			console.log(data);
			const response = await fetch('/backstage/move', {
				method: 'POST',
				headers: { 'Content-Type': 'application/json' },
				body: JSON.stringify(data)
			});
		}
	});
</script>
